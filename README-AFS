                             BackupPC4AFS
                             Version 3.0.0

           AFS additions copyright (c) 2006-2007 Stephen Joyce.

       This program is free software; you can redistribute it and/or
       modify it under the terms of the GNU General Public License.
                         See the LICENSE file.


In order for AFS backups to function properly, you need to take several
additional steps.

1.  Edit /etc/BackupPC/config.pl and change the path to the voswrap.pl
script to the correct location. For me, this is
/opt/pkg/BackupPC-3.0.0/bin/voswrap.pl , but may be different for you.

2. Copy your AFS keyfile to the backuppc host. This allows
"backup -localauth" to succeed without a password. On Debian Etch this
will be /etc/openafs/server/KeyFile. You should also make sure that
the files CellServDB, ThisCell, and UserList exist in that location also.

***TAKE CARE TO PROTECT THE KEYFILE*** Only the backuppc user should be
able to read this file. Do not allow a regular user to read this file!

3. Configure backup volumesets. BackupPC4AFS identifies AFS data by
hosts that are of the form "afs_XXXXXXXXXXXXXX" where XXXXXXXXXXXXXX is
an existing AFS volumeset. You should REALLY read the (open)AFS docs
for info on configuring AFS volumesets, but assuming you have one or
more AFS volumes named similarly to test.foo.backup, the following
commands will get you started:

 > backup addvolset -name testvolset1 -localauth
 > backup addvolentry -name testvolset1 \
   -server .* -part .* -volumes test\..*\.backup

For the AFS volumeset "testvolset1", the corresponding backuppc host
is "afs_testvolset1".

4. Add your volumeset(s) to backuppc. You can do this via the GUI or
by editing the backuppc "hosts" (NOT /etc/hosts) directly. It is
crucial that your xfer mechanism be set to "vos" rather than tar, rsync,
or similar. You can do this by setting the global xfer mechanism, or
by specifying it for each "afs_" host.

5. Now is a VERY good time to check all of your backuppc settings.
Pay particular attention to the $Conf{CgiAdminUsers} entry in config.pl.
Once you've activated a CGI admin user, you can opt to use the GUI for
further configuration. The settings for AFS backups are exactly like
the settings for non-AFS backups. The backuppc documentation in config.pl
is great. Some of my settings are:
 GLOBAL:
  Xfer -> XferMethod: vos
  Schedule -> FullPeriod: 62.64
  Schedule -> FullKeepCnt: 4, 0, 4, 0, 0, 2
    (Exponential expiry... see /etc/BackupPC/config.pl)
  Schedule -> FullKeepCntMin: 1
  Schedule -> FullAgeMax: 62
  Schedule -> IncrPeriod: 0.64
  Schedule -> IncrKeepCnt: 60
  Schedule -> IncrKeepCntMin: 60
  Schedule -> IncrAgeMax: 150
  Schedule -> IncrLevels: 3, 2, 5, 4, 7, 6, 9, 8, 1, 3, 2, 5, 4, 7, 6, 9, 8, 1, 3, 2, 5, 4, 7, 6, 9, 8, 1, 3, 2, 5, 4, 7, 6, 9, 8, 1, 3, 2, 5, 4, 7, 6, 9, 8, 1, 3, 2, 5, 4, 7, 6, 9, 8, 1, 3, 2, 5, 4, 7, 6, 9, 8
    (That's a modified tower of hanoi, but you can design simpler
    schemes.)

6. Perform a test backup and test restore to ensure that everything
operates as expected. If not, verify that the user running backuppc
(probably backup or backuppc) can run afs "backup" commands with localauth.
If this doesn't work, nothing else will. After that, verify file
permissions to ensure the backuppc user can read and write to the pool
dir and the config files. 

7. If all else fails, drop me a note. I'll only be able to answer in my
spare time, but I'll try to get back to you asap.

Enjoy!
